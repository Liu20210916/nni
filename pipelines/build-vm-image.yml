trigger: none
pr: none

jobs:
- job: linux
  pool: nni-it
  steps:
  - script: |
      curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
    displayName: Install azcli

  # TODO: add comments
  - script: |
      export USERNAME="/subscriptions/$(subscription_id)/resourcegroups/nni/providers/Microsoft.ManagedIdentity/userAssignedIdentities/$(identity_name)"
      az login --identity --allow-no-subscriptions --username $USERNAME
    displayName: az login

  # Make sure all these are registered.
  # If not, might need az provider register -n xxx
  # Need subscription-write access.

  - script: |
      set -e
      az provider show -n Microsoft.VirtualMachineImages -o json
      az provider show -n Microsoft.KeyVault -o json
      az provider show -n Microsoft.Compute -o json
      az provider show -n Microsoft.Storage -o json
      az provider show -n Microsoft.Network -o json
    displayName: Register features

  # Need to create an image gallery before this.
  # Only need to create once.
  # az sig create --resource-group <resource_group> --gallery-name <sig_name>
  
  # Add a image definition (also only once).
  # az sig image-definition create -g <resource_group> \
  #   --gallery-name <sig_name> \
  #   --gallery-image-definition <image_def> \
  #   --publisher <publisher> \
  #   --offer <offer> \
  #   --sku <sku> \
  #   --os-type <os_type>
  # For example,
  # az sig image-definition create -g nni --gallery-name nniImageGallery \
  #   --gallery-image-definition nniLinuxImage \
  #   --publisher NNI \
  #   --offer ubuntu \
  #   --sku 18.04-nni \
  #   --os-type Linux

  - script: |
      az sig image-definition list --gallery-name nniImageGallery --resource-group nni
    displayName: List image definitions

  - script: |
      set -e
      cd test/vso_tools/build_vm
      export imgBuilderId="/subscriptions/$(subscription_id)/resourcegroups/nni/providers/Microsoft.ManagedIdentity/userAssignedIdentities/$(identity_name)"
      sed -i -e "s/<subscriptionID>/$(subscription_id)/g" linux.json
      sed -i -e "s/<rgName>/nni/g" linux.json
      sed -i -e "s/<imageDefName>/nniLinuxImage/g" linux.json
      sed -i -e "s/<sharedImageGalName>/nniImageGallery/g" linux.json
      sed -i -e "s/<region1>/southeastasia/g" linux.json
      sed -i -e "s/<region2>/westus2/g" linux.json
      sed -i -e "s%<imgBuilderId>%$imgBuilderId%g" linux.json
      cat linux.json
    displayName: Configure json file

  - script: |
      az resource create \
        --resource-group nni \
        --properties @test/vso_tools/build_vm/linux.json \
        --is-full-object \
        --resource-type Microsoft.VirtualMachineImages/imageTemplates \
        -n linuxImage002
    displayName: Submit image configuration

  - script: |
      az resource invoke-action \
        --resource-group nni \
        --resource-type Microsoft.VirtualMachineImages/imageTemplates \
        -n linuxImage002 \
        --action Run
    displayName: Start image build
